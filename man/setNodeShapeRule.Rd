% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RCyjs-class.R
\docType{methods}
\name{setNodeShapeRule,RCyjs-method}
\alias{setNodeShapeRule,RCyjs-method}
\alias{setNodeShapeRule}
\title{setNodeShapeRule}
\usage{
\S4method{setNodeShapeRule}{RCyjs}(obj, attribute, control.points,
  node.shapes = c("ellipse", "triangle", "rectangle", "roundrectangle",
  "bottomroundrectangle", "cutrectangle", "barrel", "rhomboid", "diamond",
  "pentagon", "hexagon", "concavehexagon", "heptagon", "octagon", "star", "tag",
  "vee"))
}
\arguments{
\item{obj}{an RCyjs instance}

\item{attribute}{a character string, the node attribute category whose value controls shape}

\item{control.points}{a list of all possible values of the attribute}

\item{shapes}{the corresponding node shape, one specified for each of the control.points}

\item{mode}{}
}
\value{
no return value
}
\description{
\code{setNodeShapeRule} control node shape via values of the specified attribute
}
\details{
for interpolate mode, in which the node attribute should be a continusously varying numerical quantity
in-between shapes are calculated for in-between values.
for lookup mode, in which the node attribute is a discrete string variable, simple shape lookup is performed.
}
\examples{
  x <- 3 + 2

}
